version: "3"
services:
  authentik:
    image: ghcr.io/goauthentik/server:2023.3.1
    restart: unless-stopped
    command: server
    volumes:
      - media:/media
      - templates:/templates
    environment:
      AUTHENTIK_POSTGRESQL__HOST: ${PGHOST}
      AUTHENTIK_POSTGRESQL__USER: ${PGUSER}
      AUTHENTIK_POSTGRESQL__NAME: ${PGDB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PGPASS}
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
      AUTHENTIK_REDIS__HOST: auth_redis
      AUTHENTIK_REDIS__PORT: 6379
      AUTHENTIK_SECRET_KEY: ${SECRET_KEY}
    networks:
      authentik:
      postgres:
      traefik:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.rule=Host(`auth.${PRIMARY_DOMAIN}`)"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"

  auth_worker:
    image: ghcr.io/goauthentik/server:2023.3.1
    restart: unless-stopped
    command: worker
    user: root
    environment:
      AUTHENTIK_POSTGRESQL__HOST: ${PGHOST}
      AUTHENTIK_POSTGRESQL__USER: ${PGUSER}
      AUTHENTIK_POSTGRESQL__NAME: ${PGDB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PGPASS}
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
      AUTHENTIK_REDIS__HOST: auth_redis
      AUTHENTIK_REDIS__PORT: 6379
      AUTHENTIK_SECRET_KEY: ${SECRET_KEY}
    networks:
      postgres:
      authentik:
  auth_redis:
    image: redis:6
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    command:
      - "redis-server"
      - "--port 6379"
      - "--protected-mode no"
      - "--daemonize no"
    networks:
      authentik:
volumes:
  media:
  templates:
  dynomite:
networks:
  authentik:
  traefik:
    name: web_interface
    external: true
  postgres:
    name: postgres_interface
    external: true
